--SKU Name Shop Name Cat 1 Cat 2 Cat 3 Business Unit (MP/CB/RBN) SKU Status (Selling/deleted/in warehouse) Stock efford Sales qty gmv pv uv MD name
SELECT
	dev.spu_id,
	dev.sku_id,
	sbp.sbprc,
	sku.sku_name,
	sku.vender_id shop_id,
	sku.shop_name,
	sku.item_first_cate_name_en cat1,
	sku.item_second_cate_name_en cat2,
	sku.item_third_cate_name_en cat3,
	CASE
		WHEN vbc.best_combo_shop = 1
		THEN 'Combo Shop'
		WHEN sku.vender_id = 1
		THEN 'RBN'
		WHEN sku.vender_id <> 1
			AND vba.belongArea = 1
		THEN 'Local Marketplace'
		WHEN sku.vender_id <> 1
			AND vba.belongArea = 2
		THEN 'Crossborder'
	END AS business_type,
	--prc.cost_prc,
	CASE
		WHEN sku.sku_status_cd = 0
		THEN 'In Warehouse'
		WHEN sku.sku_status_cd = 1
		THEN 'Selling'
		WHEN sku.sku_status_cd = 10
		THEN 'Deleted'
	END sku_status,
	SUM(stock.stock) stok,
	pvuv.UV,
	pvuv.PV,
	ord.total_order total_effective_order,
	ord.total_sale_qty,
	ord.gmv,
	ord.mdname
FROM
	(
		SELECT
			getdetail.spu_id,
			getdetail.sku_id,
			getdetail.sbprc
		FROM
			(
				SELECT
					id
				FROM
					fdm.fdm_epigroupon_activity_config_chain
				WHERE
					state = 200
					AND dp = 'EXPIRED'
					AND dt = sysdate( - 1)
				
				UNION ALL
				
				SELECT
					id
				FROM
					fdm.fdm_epigroupon_activity_config_chain
				WHERE
					state = 200
					AND dp = 'ACTIVE'
			)
			getid
		LEFT JOIN
			(
				SELECT
					activity_id,
					spu_id,
					sku_id,
					activity_price sbprc
				FROM
					fdm.fdm_epigroupon_activity_detail_config_chain
				WHERE
					dp = 'ACTIVE'
			)
			getdetail
		ON
			getid.id = getdetail.activity_id
	)
	dev
LEFT JOIN
	(
		SELECT
			item_id spu_id,
			item_sku_id,
			sku_name,
			item_first_cate_name_en,
			item_second_cate_name_en,
			item_third_cate_name_en,
			sku_status_cd,
			vender_id,
			shop_name
		FROM
			gdm.gdm_m03_glb_item_sku_da
		WHERE
			dt = sysdate( - 1)
	)
	sku
ON
	dev.sku_id = sku.item_sku_id
LEFT JOIN
	(
		SELECT
			dcc.sku_id AS sku_id,
			dcc.activity_price AS sbprc,
			dcc.create_time AS price_createtm
		FROM
			(
				SELECT
					sku_id,
					create_time,
					activity_price,
					ROW_NUMBER() OVER(PARTITION BY sku_id ORDER BY create_time DESC) AS rownum
				FROM
					fdm.fdm_epigroupon_activity_detail_config_chain dcc
				WHERE
					dp = 'ACTIVE'
			)
			dcc
		WHERE
			rownum = 1
	)
	sbp
ON
	sbp.sku_id = dev.sku_id
LEFT JOIN
	(
		SELECT
			sku_id,
			otc_opter_erp mdname,
			SUM(after_prefr_amt) GMV,
			COUNT(DISTINCT ord_id) AS total_order,
			SUM(sale_qtty) AS total_sale_qty
		FROM
			tmp.tmp_ord_ord_det
		WHERE
			book_dt = sysdate( - 1)
			AND ord_state IN(1, 6)
			AND ord_type_cd <> 'Parent Order'
			AND SUBSTR(ord_flag, 10, 1) = 7
			AND SUBSTR(ord_flag, 206, 1) IN(1, 2)
			AND
			(
				intraday_ord_complete_flag = 1
				OR intraday_ord_deal_flag = 1
			)
			AND
			(
				intraday_ord_cancel_flag = 0
				OR LENGTH(ord_cancel_tm) = 0
			)
		GROUP BY
			sku_id,
			otc_opter_erp
	)
	ord
ON
	dev.sku_id = ord.sku_id
LEFT JOIN
	(
		SELECT
			item_sku_id,
			cost_prc
		FROM
			gdm.gdm_m03_glb_item_sku_price_da
		WHERE
			dt = sysdate( - 1)
	)
	prc
ON
	dev.sku_id = prc.item_sku_id
LEFT JOIN
	(
		SELECT
			vender_id,
			value_content best_combo_shop
		FROM
			fdm.fdm_popvender_vender_dynamic_subject_chain
		WHERE
			dp = 'ACTIVE'
			AND attribute_key = 'bestComboShop'
	)
	vbc
ON
	sku.vender_id = vbc.vender_id
LEFT JOIN
	(
		SELECT
			vender_id,
			value_content belongArea
		FROM
			fdm.fdm_popvender_vender_dynamic_subject_chain
		WHERE
			dp = 'ACTIVE'
			AND attribute_key = 'belongArea'
	)
	vba
ON
	sku.vender_id = vba.vender_id
LEFT JOIN
	(
		SELECT
			stk.sku_id,
			mxd.max_date,
			stk.dc_id,
			stk.sid,
			SUM(stk.num_stock) AS stock
		FROM
			(
				SELECT
					*
				FROM
					fdm.fdm_stock_id_glb_core_stocknum_chain
				WHERE
					dp = 'ACTIVE'
					AND num_stock > 0
					--and sid IN(1, 2, 3, 4, 5, 6)
					--and dc_id IN(1, 3, 4, 5, 6, 7, 100, 101, 102, 103, 104, 105, 106, 200)
			)
			stk
		INNER JOIN
			(
				SELECT
					sku_id,
					dc_id,
					MAX(start_date) AS max_date
				FROM
					fdm.fdm_stock_id_glb_core_stocknum_chain
				WHERE
					dp = 'ACTIVE'
					--and sid IN(1, 2, 3, 4, 5, 6)
					--and dc_id IN(1, 3, 4, 5, 6, 7, 100, 101, 102, 103, 104, 105, 106, 200)
				GROUP BY
					sku_id,
					dc_id
			)
			mxd
		ON
			stk.sku_id = mxd.sku_id
			AND stk.dc_id = mxd.dc_id
			AND stk.start_date = mxd.max_date
		GROUP BY
			stk.sku_id,
			mxd.max_date,
			stk.dc_id,
			stk.sid
	)
	stock ON dev.sku_id = stock.sku_id
LEFT JOIN
	(
		SELECT
			adm.sku_id,
			SUM(adm.PV) PV,
			SUM(adm.UV) UV
		FROM
			(
				SELECT
					sku_id,
					COUNT(DISTINCT browser_uniq_id) AS UV,
					SUM(pv) AS PV
				FROM
					adm.adm_sku_scan_basic_d
				WHERE
					dt = sysdate( - 1)
				GROUP BY
					sku_id
			)
			adm
		GROUP BY
			adm.sku_id
	)
	pvuv
ON
	pvuv.sku_id = dev.sku_id
GROUP BY
	dev.spu_id,
	dev.sku_id,
	sbp.sbprc,
	sku.sku_name,
	sku.vender_id,
	sku.shop_name,
	sku.item_first_cate_name_en,
	sku.item_second_cate_name_en,
	sku.item_third_cate_name_en,
	CASE
		WHEN vbc.best_combo_shop = 1
		THEN 'Combo Shop'
		WHEN sku.vender_id = 1
		THEN 'RBN'
		WHEN sku.vender_id <> 1
			AND vba.belongArea = 1
		THEN 'Local Marketplace'
		WHEN sku.vender_id <> 1
			AND vba.belongArea = 2
		THEN 'Crossborder'
	END,
	CASE
		WHEN sku.sku_status_cd = 0
		THEN 'In Warehouse'
		WHEN sku.sku_status_cd = 1
		THEN 'Selling'
		WHEN sku.sku_status_cd = 10
		THEN 'Deleted'
	END,
	pvuv.UV,
	pvuv.PV,
	ord.total_order,
	ord.total_sale_qty,
	ord.gmv,
	ord.mdname
